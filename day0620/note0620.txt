calloc  函数也可以动态分配内存
这个函数可以把所有所有动态分配内存的内容设置为0
为了使用这个函数需要包含stdlib.h 头文件
例 ，malloc(5*sizeof(int))      calloc(5,sizeof(int))  两者区别
calloc返回值是分配好的第一个存储区地址
这个函数也可能失败，如果失败则返回空地址NULL;

realloc可以调整一段动态分配存储区的数量,尽量少使用（频繁影响速度）
    calloc(5,sizeof(int))   realloc

计算机所有文件都是采用二进制方式记录数字得的
    如果文件所有二进制数字都对应字符则这种文件叫文本文件
    除了文本文件以外的所有文件都叫二进制文件 例，a.out

C语言提供两种操作文件的方法，一种方法只能操作文本文件，另一种可以操作所有问价
    1、文本方式
    2、二进制方式
文件操作步骤：
    1、打开 fopen
    2、操作 fread/fwrite
    3、关闭 fclose

fopen函数需要两个参数
1.代表文件位置的路径
2.代表打开文件的方式（决定程序中可以对文件做什么操作）

打开方式有如下选择
"r"     只能查看文件内容不能修改
        从文件头开始查看
        如果文件不存在则打开会失败
“r+”    比“r”多了修改文件内容的功能
“w”     只能修改文件的内容不能察看
        只能从文件头开始修改
        如果文件不存在就会创建文件
        如果文件已经存在就删除文件的所有内容
        //打开的一定是一个空文件
“w+”    比“w”多了察看文件内容的功能        
“a”     只能修改不能察看
        只能在文件原有内容后面追加新内容
        如果文件不存在就创建文件
        如果文件已经存在则不会对文件原有内容
        做任何修改
“a+”    比“a”多了察看功能

“b”也是一种打开方式
他可以和上面任何一种打开方式混合使用
如果程序中采用二进制方式操作文件就应该在打开
文件的时候加上这个打开方式

fopen函数的返回值应该记录在文件指针里，
程序里只能用文件指针代表打开的文件（不能用路径）
fopen函数也可能失败，如果失败的话返回值是空

当完成对文件的所有操作后必须使用fclose函数关闭文件
fclose函数需要文件指针作为参数
文件关闭后文件指针成为野指针，必须恢复成空指针

文件操作分为两种

1.把内存里一组连续存储区的内容拷贝到文件里（写文件）//本来文件里没有这个内
容，通过这种方式可以往文件里写一些内容 //内存里连续的内容有第一个存储区的地址 //第一个地址由程序提供
2.把文件里一组连续存储区的内容拷贝到内存里（读文件）//本来内存里没有这个内容，把文件里的内容在在内存中显示 //第一个地址需要程序提供

fread函数采用二进制方式从文件里读数据
fwrite函数采用二进制方式向文件里写数据

这两个函数都需要4个参数
1.内存里第一个存储区的地址（一组连续的内存里的第一个存储区的地址）

//是内存中第一个存储区的地址，而不是文件里第一个存储区的地址


//第一个存储区的地址都是由程序提供的
//数组是放在内存里的，他本身就是以二进制方式存在
2.内存里单个存储区的大小
3.希望操作的存储区个数
4.文件指针

返回值表示实际操作的存储区个数//很重要，通常作为判断循环结束的条件
返回0就表示读玩了跳出循环,把返回值赋值给size
while(1)
{
    fread(地址/*程序中内存的第一个存储区的地址*/,sizeof(类型),size/*希望操作的个数*/,p_file/*文件指针*/);
    if（！size）
    {
        break;
    }
}
fclose(p_file);
p_file = NULL;

以下两个函数以文本方式操作文件//文本文件里所有的内容都是字符串
fprintf函数可以把数字按照格式转换成字符串并记录到文本文件里
这个函数的第一个参数是一个文件指针，后面的参数和printf函数的参数一样
//写文件

fscanf函数可以从文本文件获得数字并记录到存储区里
这个函数的第一个参数是一个文件指针，后面的参数和scanf函数的参数一样
//读文件

//scanf拿数据的时候遇到空格和换行就停止了，就不拿了
    
        
    计算机里为每个打开的文件保留了一个整数，这个整数表示下一次读写操作的的开始位置，这个位置一定在两个相连字节中间
这个整数数值就是文件头到这个位置的字节数
这个整数叫做文件的位置指针
当从文件里获得n个字节或向文件里写入n个字节后位置指针也会向后移动n个字节
    ftell函数可以获取位置指针的数值
    rewind函数可以把位置指针移动到文件开头
    fseek函数可以把位置指针移动到文件的任何位置
          
          fseek函数里需要指定一个基准位置然后再指定目标位置到基准位置的距离
    SEEK_SET 0 把文件头作为基准位置
    SEEK_CUR 1 把当前位置作为基准位置
    SEEK_END 2 把文件尾作为基准位置
    如果目标位置在基准位置后则距离用非负数表示
    如果目标位置在基准位置前则距离用负数表示
    距离的绝对值表示基准位置和目标位置包含的字节个数












