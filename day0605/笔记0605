操作符用来标示对数字的处理操作、
单目、双目、三目操作符
如果参与除法计算的两个数都是整数，结果只保留整数部分

C语言用% 表示取余数擦操作

赋值操作符使用=来表示
可以把一个数字记录到储存区里
左边必须是存储区
赋值语句可以当作数字使用，这个数字就是赋值完成后左边储存区里的数值
可以在一条语句中使用多个赋值操作符，从左到右赋

多数双目操作符可以合并使用，形成复合赋值操作符，如/=、+=
复合操作符左边表示数据区，右边表示数字
（先计算两边数值，再将结果赋值给左边数据区）
双目操作符和赋值操作符合并后优先级和赋值操作符一样低

    自++，自减--都是单目操作符
    只能和存储区配合使用
    都有两种使用方法，前操作如++a，后操作如a++
    使用自增、自减表达式本身可以当数字使用：++a是修改后数字，a++是修改前数
    不要在同一个表达式中对同一个变量进行多次自增或自减计算，因为结果不确定

    逻辑操作符   逻辑表达式的结果只能是布尔值

    ！：单目操作符，求反布尔值。使用时用在一个布尔值前面
    双目逻辑符：==，！=，>,<,>=,<=
    最多包含一个双目逻辑运算符的表达式叫简单逻辑表达式，他的计算结果在计算机和数学里一定一样。
    如果一个表达式包含多个逻辑表达式，需要先拆分成多个表达式然后再合并计算。

    与（&&）或（||）双目逻辑操作符，可以把两个逻辑表达式合并成1个.（如果前面逻辑表达式的结果可以决定整个逻辑表达式的结果计算机就忽略后面的逻辑表达式）
例，1||++num 结果++num不执行
    0&&++num 结果++num不执行

    位操作符可以直接操作二进制数位

    双目位操作符 包括 按位与（&），按位或（|）和按位异或（^）；
他们都可以把两个数值对应的二进制数位的内容做计算
（&）：把两数字对应数位的内容做与计算，只要两数位中有一个数位的内容是0则与计算的结果就是0
(|):数字对应二进制数位的内容做或计算
（^）：数字对位做异或运算；内容一样结果0，不一样结过1

移位操作符
 <<左移位,一般情况左移动n位相当于乘2的n次方
 >>右移位,有符号类型数字右移填充符号位，无符号类型左边一定填充0；右移动除以2的n次方
    所有位操作符不会修改现有数据去内容
&也可以作为单目操作符使用，这时可以用来计算一个数据区的地址
使用时应该把这个操作符写在数据区的前面
可以使用%p作为站位符把地址数据显示在屏幕上
我们的计算机里算有的地址都是32个二进制数位构成

*也可以作为单目操作符使用，根据一个地址找到所对应的存储区

三目操作符可以从两套计算规则里选一套使用
三目操作符格式如下
    布尔值 ？ 公式一：公式二
IF 布尔值==1，采用公式一
else 采用公式二

如果表达式包含多个不同类型的数字，计算机就必须首先把他们转换位同一个类型然后才能计算
    称为 隐式转换
    隐式类型转换完全由计算机执行
    隐式类型转换过程一定会吧占位小的转换为站位大的类型，为避免数据丢失

如果不同类型的大小一样酒吧整形转成浮点型，把有符号转换成无符号类型

可以在程序中给一个数字指定一个类型，这叫做强制类型转换
    强制类型转换 格式如下
        （char）300
强制类型转换可能丢失数据；
    所有类型转换都不会修改现有存储区内容；
    计算机会分配一个新的储存区用来存放转换后的数字；






