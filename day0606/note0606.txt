分支结构与循环语句

分支语句可以在程序运行时从机组语句选择一组执行而忽略其他组

IF 关键字可以用来编写分支
IF 需要为每个可能性编写专门的处理语句
    每组语句需要一个配对的逻辑表达式，决定哪组语句需要执行
if()
{}
else if()
{}
else if()
{}
……
最多只执行一组语句，如果两组语句有可能同时执行，那么不应该包含在一个分支内

编写if分支的时候最好先把分组（语句组）的个数确定下来

如果if分支语句一定会执行一组语句的话，就i可以省略最后一组语句的逻辑表达式
    IF 分支里多个逻辑表达式为真，执行第一个为真的逻辑表达式对应的语句
    IF 分支的每组语句和前面所有的逻辑表达式都有关系
    编写IF 分支时尽量把逻辑表达式简单的写在前面，这样可以简化后面的逻辑表达式
    如果一个分支里的所有可能性可以用整数表示可以用switch……case格式编写解决

#循环语句 可以把一组语句反复多次执行
FOR 关键字可以用来实现循环
循环变量 格式
    （把开始变量赋值给循环变量；循环的范围，逻辑表达式；循环变量的变化规律）
    例，for (int i=0;i>100;i++）
            {
                循环表达式；
            }
如果一个问题可以用一组的数字的变化规律来描述，可以考虑用for循环解决这个问题

假设有如下for 循环
for （1；2；3）
{
4；
}
它按以下方式分组执行
[1,2][4,3,2][4,3,2]...[4,3,2]
第一组和其他所有组都不一样
for循环正常结束的时候一定在两组之间结束
如果某一组最后编号为2的了逻辑表达式结果为真就启动下一组，否则结束循环
如果for循环正常结束循环变量一定落在指定范围之外
for 循环有可能不执行大括号里面的语句
for 循环小括号的每条语句都可以省略
    如果省略逻辑表达式表示逻辑结果永远为真。这种循环无法正常结束，叫死循环。
for 循环小括号前面和后面的部分可以使用逗号连接的多条语句

    C99规范里允许在循环小括号里临时声明循环变量，循环外不可引用








































